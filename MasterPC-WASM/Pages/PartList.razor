@page "/part-list"

@using MasterPC_WASM.Components.Tables
@using MasterPC_WASM.Services;

@inject ILocalStorageServiceClient localStorageService
@inject NavigationManager navigationManager

<PageTitle> Part List </PageTitle>


<div>
    <div style="padding: 2em 0; display: flex; justify-content: center; align-items: center; background-color: @(theme is not null ? theme.Palette.Tertiary : null)">
        <MudText Align="Align.Center" Typo="Typo.h2 " Style="font-weight: 500"> Create Your Part List </MudText>
    </div>

    <div style="width: 100%; display: flex; justify-content: center">
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Style="margin: 2em 0;">
            <div style="margin-bottom: 2em">
                <MudPaper Elevation="25" Style="border-radius: 15px;">
                    <MudToolBar>
                        <MudTooltip Text="Copy to Clipboard" Placement="Placement.Top">
                            <MudIconButton Icon="@Icons.Material.Outlined.ContentCopy" Color="Color.Inherit" Style="margin-right: .5em" />
                        </MudTooltip>

                        <MudText Typo="Typo.button">
                            @uniqueURL
                        </MudText>

                        <MudSpacer />

                        <MudTooltip Text="Save Part List" Placement="Placement.Top">
                            <MudButton StartIcon="@Icons.Material.Filled.SaveAs" Variant="Variant.Outlined">
                                Save As
                            </MudButton>
                        </MudTooltip>

                        <MudTooltip Text="Start New Part List" Placement="Placement.Top">
                            <MudButton StartIcon="@Icons.Material.Filled.Add" Variant="Variant.Outlined" Style="margin-left: .5em">
                                Start New
                            </MudButton>
                        </MudTooltip>
                    </MudToolBar>
                </MudPaper>
            </div>

            @if (partListVM is not null)
            {
                <PartListTable PartListVM="partListVM" OnDeleteCase="OnRemoveCase" OnDeleteCPU="OnRemoveCPU" 
                    OnDeleteCPUCooler="OnRemoveCPUCooler" OnDeleteGPU="OnRemoveGPU" OnDeleteMotherboard="OnRemoveMotherboard" 
                    OnDeletePSU="OnRemovePSU" OnDeleteRAM="OnRemoveRAM" OnDeleteStorage="OnRemoveStorage" />
            }
        </MudContainer>
    </div>
</div>



@code {
    [CascadingParameter(Name = "theme")]
    private MyMudTheme? theme { get; set; }

    private PartListVM partListVM { get; set; } = new PartListVM();
    private string? uniqueURL { get; set; }

    protected override async Task OnInitializedAsync()
    {
        partListVM = await localStorageService.GetPartListAsync();
        uniqueURL = GetUniqueURL();

        await base.OnInitializedAsync();
    }

    private string GetUniqueURL()
    {
        string url = navigationManager.Uri;

        return url;
    }

    public async Task OnRemoveCase()
    {
        partListVM.Case = null;
        await localStorageService.SetPartListAsync(partListVM);
    }

    public async Task OnRemoveCPU()
    {
        partListVM.CPU = null;
        await localStorageService.SetPartListAsync(partListVM);
    }

    public async Task OnRemoveCPUCooler()
    {
        partListVM.CPUCooler = null;
        await localStorageService.SetPartListAsync(partListVM);
    }

    public async Task OnRemoveGPU()
    {
        partListVM.GPU = null;
        await localStorageService.SetPartListAsync(partListVM);
    }

    public async Task OnRemoveMotherboard()
    {
        partListVM.Motherboard = null;
        await localStorageService.SetPartListAsync(partListVM);
    }

    public async Task OnRemovePSU()
    {
        partListVM.PSU = null;
        await localStorageService.SetPartListAsync(partListVM);
    }

    public async Task OnRemoveRAM(RAMVM ramVM)
    {
        partListVM.RAMs.Remove(ramVM);

        await localStorageService.SetPartListAsync(partListVM);
    }

    public async Task OnRemoveStorage(StorageVM storageVM)
    {
        partListVM.Storages.Remove(storageVM);

        await localStorageService.SetPartListAsync(partListVM);
    }
}
